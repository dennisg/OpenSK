diff --git a/boards/nordic/nrf52840_dongle/Makefile b/boards/nordic/nrf52840_dongle/Makefile
index 61dc5759..2326e82f 100644
--- a/boards/nordic/nrf52840_dongle/Makefile
+++ b/boards/nordic/nrf52840_dongle/Makefile
@@ -23,6 +23,10 @@ TOCKLOADER_JTAG_FLAGS = --jlink --board nrf52dk
 flash: target/$(TARGET)/release/$(PLATFORM).bin
 	$(TOCKLOADER) $(TOCKLOADER_GENERAL_FLAGS) flash --address $(KERNEL_ADDRESS) $(TOCKLOADER_JTAG_FLAGS) $<
 
+target/$(TARGET)/release/$(PLATFORM).hex: target/$(TARGET)/release/$(PLATFORM).elf
+	$(Q)objcopy --output-target=ihex $^ $@
+
+
 # Upload the kernel over serial/bootloader
 .PHONY: program
 program: target/$(TARGET)/release/$(PLATFORM).hex
diff --git a/boards/nordic/nrf52840_dongle/layout.ld b/boards/nordic/nrf52840_dongle/layout.ld
index 657b0d26..58c85f5b 100644
--- a/boards/nordic/nrf52840_dongle/layout.ld
+++ b/boards/nordic/nrf52840_dongle/layout.ld
@@ -1,7 +1,7 @@
 MEMORY
 {
-  rom (rx)  : ORIGIN = 0x00000000, LENGTH = 128K
-  prog (rx) : ORIGIN = 0x00030000, LENGTH = 832K
+  rom (rx)  : ORIGIN = 0x00001000, LENGTH = 128K
+  prog (rx) : ORIGIN = 0x00030000, LENGTH = 704K
   ram (rwx) : ORIGIN = 0x20000000, LENGTH = 256K
 }
 
diff --git a/boards/nordic/nrf52840_dongle/src/main.rs b/boards/nordic/nrf52840_dongle/src/main.rs
index 31d0b392..814203ec 100644
--- a/boards/nordic/nrf52840_dongle/src/main.rs
+++ b/boards/nordic/nrf52840_dongle/src/main.rs
@@ -11,7 +11,7 @@ use kernel::component::Component;
 #[allow(unused_imports)]
 use kernel::{debug, debug_gpio, debug_verbose, static_init};
 use nrf52840::gpio::Pin;
-use nrf52dk_base::{SpiPins, UartPins};
+use nrf52dk_base::{SpiPins, UartChannel, UartPins};
 
 // The nRF52840 Dongle LEDs
 const LED1_PIN: Pin = Pin::P0_06;
@@ -60,6 +60,9 @@ pub unsafe fn reset_handler() {
     // Loads relocations and clears BSS
     nrf52840::init();
 
+    // relocate vector table, interrupt vector table is at 0x1000
+    scb::set_vector_table_offset(0x00001000);
+
     let board_kernel = static_init!(kernel::Kernel, kernel::Kernel::new(&PROCESSES));
     // GPIOs
     let gpio = components::gpio::GpioComponent::new(board_kernel).finalize(
@@ -130,7 +133,7 @@ pub unsafe fn reset_handler() {
         LED2_G_PIN,
         LED2_B_PIN,
         led,
-        &UartPins::new(UART_RTS, UART_TXD, UART_CTS, UART_RXD),
+        UartChannel::Pins(UartPins::new(UART_RTS, UART_TXD, UART_CTS, UART_RXD)),
         &SpiPins::new(SPI_MOSI, SPI_MISO, SPI_CLK),
         &None,
         button,
@@ -140,6 +143,7 @@ pub unsafe fn reset_handler() {
         FAULT_RESPONSE,
         nrf52840::uicr::Regulator0Output::V3_0,
         false,
+        &Some(&nrf52840::usbd::USBD),
         chip,
     );
 }
